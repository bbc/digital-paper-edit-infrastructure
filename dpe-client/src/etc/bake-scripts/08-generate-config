#! /usr/bin/env python

import json
import sys
import os
import pwd
import grp


# def chown(out_path, proc_name):
#     uid = pwd.getpwnam(proc_name).pw_uid
#     gid = grp.getgrnam(proc_name).gr_gid
#     os.chown(out_path, uid, gid)


# def write_config_from_template(template_path, out_path, param):
#     f = open(template_path, 'r')
#     template = f.read()
#     try:
#         config = template.format(param)
#     except KeyError as err:
#         config = template.replace("{0}", param)
#     outfile = open(out_path, 'w')
#     outfile.write(config)
#     outfile.close()

# def write_matomo_config(db_host):
#     template_path = '/etc/newslabs-analytics/config.ini.php.template'
#     out_path = '/var/www/matomo/config/config.ini.php'
#     write_config_from_template(template_path, out_path, db_host)
#     chown(out_path, "nginx")


# def write_cloudwatch_config(log_stream_name):
#     template_path = '/etc/newslabs-analytics/amazon-cloudwatch-agent.json.template'
#     out_path = '/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json'
#     write_config_from_template(template_path, out_path, log_stream_name)
#     chown(out_path, "root")


def main(argv):
    raw = json.load(open(argv[1], "r"))
    print(raw)
    # write_matomo_config(raw["configuration"]["db_host"])
    # write_cloudwatch_config(raw["environment"] + "-" +  raw["name"])
    return 0


if __name__ == "__main__":
    sys.exit(main(sys.argv))
